<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="model.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role, description, available
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from roles
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from roles
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="model.Role" >
    insert into roles (id, role, description, 
      available)
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{available,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="model.Role" useGeneratedKeys="true" keyProperty="id">
    insert into roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="role != null" >
        role,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        #{available,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.Role" >
    update roles
    <set >
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Role" >
    update roles
    set role = #{role,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAllIds" resultType="long"  >
    select id from roles
  </select>
  <select id="selectAll" resultMap="BaseResultMap"  >
    select <include refid="Base_Column_List" /> from roles
  </select>


  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="dao.condition.RoleCondition" >
    select
    <include refid="Base_Column_List" />
    from roles
    <where>
      <if test="role != null">and role= #{role,jdbcType=VARCHAR}</if>
    </where>
    <if test="sortby != null">
      ORDER BY ${sortby} ${order}
    </if>
    limit #{start,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
  </select>

</mapper>