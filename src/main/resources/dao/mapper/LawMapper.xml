<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.LawMapper">

  <resultMap id="BaseResultMap" type="model.Law">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="publish_institution" jdbcType="VARCHAR" property="publishInstitution" />
    <result column="document_number" jdbcType="VARCHAR" property="documentNumber" />
    <result column="publish_time" jdbcType="DATE" property="publishTime" />
    <result column="active_time" jdbcType="DATE" property="activeTime" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.Law">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, publish_institution, document_number, publish_time, active_time, category, 
    view_count
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from law
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from law
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.Law">
    insert into law (id, title, publish_institution, 
      document_number, publish_time, active_time, 
      category, view_count, content
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{publishInstitution,jdbcType=VARCHAR}, 
      #{documentNumber,jdbcType=VARCHAR}, #{publishTime,jdbcType=DATE}, #{activeTime,jdbcType=DATE}, 
      #{category,jdbcType=VARCHAR}, #{viewCount,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.Law">
    insert into law
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="publishInstitution != null">
        publish_institution,
      </if>
      <if test="documentNumber != null">
        document_number,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="activeTime != null">
        active_time,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishInstitution != null">
        #{publishInstitution,jdbcType=VARCHAR},
      </if>
      <if test="documentNumber != null">
        #{documentNumber,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null">
        #{activeTime,jdbcType=DATE},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.Law">
    update law
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishInstitution != null">
        publish_institution = #{publishInstitution,jdbcType=VARCHAR},
      </if>
      <if test="documentNumber != null">
        document_number = #{documentNumber,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null">
        active_time = #{activeTime,jdbcType=DATE},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.Law">
    update law
    set title = #{title,jdbcType=VARCHAR},
      publish_institution = #{publishInstitution,jdbcType=VARCHAR},
      document_number = #{documentNumber,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=DATE},
      active_time = #{activeTime,jdbcType=DATE},
      category = #{category,jdbcType=VARCHAR},
      view_count = #{viewCount,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Law">
    update law
    set title = #{title,jdbcType=VARCHAR},
      publish_institution = #{publishInstitution,jdbcType=VARCHAR},
      document_number = #{documentNumber,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=DATE},
      active_time = #{activeTime,jdbcType=DATE},
      category = #{category,jdbcType=VARCHAR},
      view_count = #{viewCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteMany" parameterType="java.util.List">
    DELETE FROM law where id in
    <foreach item="idItem" collection="list" open="(" separator="," close=")">
      #{idItem}
    </foreach>
  </delete>

  <select id="selectByCondition" resultMap="ResultMapWithBLOBs" parameterType="dao.condition.LawCondition" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from law
    <where>
      <if test="name != null">and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')</if>
      <if test="keywords != null">and keywords like CONCAT('%',#{keywords,jdbcType=VARCHAR},'%')</if>
      <if test="category != null">and category = #{category,jdbcType=VARCHAR} </if>
    </where>
    <if test="sortby != null">
      ORDER BY ${sortby} ${order}
    </if>
    limit #{start,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
  </select>
</mapper>